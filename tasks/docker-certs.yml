---
# - name: Ensure that Docker is installed

- name: Check if mail certificates already exist
  find:
    file_type: any
    paths:
      - "{{ mail_persist_folder }}/certs"
  register: certs_found

- name: Generate certificates
  when: certs_found.matched == 0
  docker_container:
    name: mail-cert-init
    auto_remove: yes
    image: certbot/certbot
    volumes:
      - /var/log/letsencrypt/:/var/log/letsencrypt/
      - "{{ mail_persist_folder }}/certs/:/etc/letsencrypt/"
    published_ports:
      - "80:80"
    command: "certonly --standalone -n --agree-tos --email \"{{ mail_cert_email }}\" -d {{ mail_domains | join(',') }}"
  register: cert_generated
  notify:
    - Create renew hook

- name: Check certs directory
  when: cert_generated.changed # noqa 503
  stat:
    path: "{{ mail_persist_folder }}/certs/live"
  register: cert_was_generated

- name: Check if was certs generated well
  fail:
    msg: "Certificate was not generated! Points all configured domains to this server?"
  when: cert_generated.changed and not cert_was_generated.stats.exists # noqa 503

- name: Create systemd service
  become: true
  template:
    dest: /etc/systemd/system/mail-certs-renew.service
    src: mail-certs-renew.service.j2
    mode: 0644
  notify: Restart cert renew

- name: Create systemd timer
  template:
    dest: /etc/systemd/system/mail-certs-renew.timer
    src: mail-certs-renew.timer.j2
    mode: 0644
  notify: Restart cert renew
